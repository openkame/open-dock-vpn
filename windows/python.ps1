param(
    [Parameter(Mandatory=$true)]
    [ValidateSet("install", "update", "uninstall")]
    [string]$Action,

    [Parameter(Mandatory=$true)]
    [string]$InstallPath
)

# ‚úÖ V√©rifie que le script n'est pas ex√©cut√© en tant qu'administrateur
if (([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Host "‚ùå Ce script ne doit pas √™tre ex√©cut√© en tant qu'administrateur."
    exit 1
}

# üìÅ Validation du r√©pertoire d'installation
if (-Not (Test-Path $InstallPath)) {
    Write-Host "‚ùå Chemin d'installation invalide : $InstallPath"
    exit 1
}

# üìÅ Paths
$BASE_DIR = $InstallPath
$VENV_DIR = Join-Path $BASE_DIR "lib\venv"
$LIB_DIR  = Join-Path $BASE_DIR "lib"
$PYTHON_VENV = Join-Path $VENV_DIR "Scripts\python.exe"
$REQ_FILE = Join-Path $BASE_DIR "windows\requirements.txt"
$TEST_IMPORTS = Join-Path $LIB_DIR "test_imports.py"

# üîß V√©rifie si le venv est valide (version Python >= 3.8)
function Test-Venv() {
    if (Test-Path $PYTHON_VENV) {
        & $PYTHON_VENV -c "import sys; exit(0 if sys.version_info >= (3,8) else 1)" | Out-Null
        return ($LASTEXITCODE -eq 0)
    }
    return $false
}

function Install-Venv() {
    Write-Host "üîç V√©rification de l'environnement virtuel Python..."
    if (-Not (Test-Venv)) {
        if (Test-Path $VENV_DIR) {
            Write-Host "‚ö†Ô∏è Venv existant invalide. Suppression..."
            Remove-Item -Recurse -Force $VENV_DIR
        }

        Write-Host "üîß Cr√©ation du venv..."
        python -m venv $VENV_DIR
        if ($LASTEXITCODE -ne 0) {
            Write-Host "‚ùå Erreur lors de la cr√©ation du venv."
            exit 1
        }
    } else {
        Write-Host "‚úÖ Venv existant valide."
    }
}

function Start-Venv() {
    $env:VIRTUAL_ENV = $VENV_DIR
    $env:PATH = "$VENV_DIR\Scripts;$env:PATH"
    $env:PYTHONUTF8 = "1"
}

function Update-Pip() {
    & $PYTHON_VENV -m pip --version | Out-Null
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ö†Ô∏è pip manquant. Installation via ensurepip..."
        & $PYTHON_VENV -m ensurepip --default-pip
        if ($LASTEXITCODE -ne 0) {
            Write-Host "‚ùå Impossible d'installer pip."
            exit 1
        }
    } else {
        Write-Host "‚úÖ pip est pr√©sent."
    }

    Write-Host "üîÑ Mise √† jour de pip lui-m√™me..."
    & $PYTHON_VENV -m pip install --upgrade pip
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Erreur lors de la mise √† jour de pip."
        exit 1
    }
}

function Update-Venv() {
    Write-Host "üîÑ V√©rification des mises √† jour pip..."
    $outdated = & $PYTHON_VENV -m pip list --outdated
    if ($outdated) {
        Write-Host "üì¶ Mise √† jour des d√©pendances..."
        & $PYTHON_VENV -m pip install -U --no-input -r $REQ_FILE
        if ($LASTEXITCODE -ne 0) {
            Write-Host "‚ùå √âchec de mise √† jour des paquets."
            exit 1
        }
    } else {
        Write-Host "‚úÖ Aucune mise √† jour n√©cessaire."
    }
}

function Install-Dependencies() {
    Write-Host "üîç V√©rification des imports Python..."
    & $PYTHON_VENV $TEST_IMPORTS | Out-Null
    if ($LASTEXITCODE -ne 0) {
        Write-Host "üì¶ Installation des requirements..."
        & $PYTHON_VENV -m pip install -r $REQ_FILE
        if ($LASTEXITCODE -ne 0) {
            Write-Host "‚ùå Erreur d'installation des d√©pendances."
            exit 1
        }
    } else {
        Write-Host "‚úÖ Tous les modules n√©cessaires sont d√©j√† install√©s."
    }
}

function Uninstall-Venv() {
    if (Test-Path $VENV_DIR) {
        Write-Host "üßπ Suppression de l'environnement virtuel Python..."
        Remove-Item -Recurse -Force $VENV_DIR
        Write-Host "‚úÖ Venv supprim√©."
    } else {
        Write-Host "‚ÑπÔ∏è Aucun venv √† supprimer."
    }
}

switch ($Action) {
    "install" {
        Install-Venv
        Start-Venv
        Update-Pip
        Install-Dependencies
    }
    "update" {
        if (-Not (Test-Venv)) {
            Write-Host "‚ùå Aucun venv valide d√©tect√©. Lancez 'install' d'abord."
            exit 1
        }
        Start-Venv
        Update-Pip
        Update-Venv
        Install-Dependencies
    }
    "uninstall" {
        Uninstall-Venv
    }
}
